module.exports = {
	title: 'Information Theory',
	description: 'UvA course',
	themeConfig: {
		sidebar: [{"title": "Organization of the course", "children": [["/general-information/organization-of-the-course/", "Organization of the course"], ["/general-information/course-content-overview-now-with-video/", "Course content (overview, now with video!)"], ["/general-information/tips-for-moderators-and-presenters/", "Tips for Moderators and Presenters"], ["/general-information/references-and-shannons-original-papers/", "References and Shannon's original papers"], ["/general-information/copyright-and-acknowledgements/", "Copyright and Acknowledgements"]]}, {"title": "Introduction: Preliminaries", "children": [["/01-probability-theory/introduction-preliminaries/", "Introduction: Preliminaries"], ["/01-probability-theory/mathematical-tools/some-important-distributions/", "Some Important Distributions"], ["/01-probability-theory/programming/what-programming-languages-am-i-allowed-to-use/", "What programming languages am I allowed to use?"]]}, {"title": "Jensen's Inequality", "children": [["/02-entropy/jensens-inequality/jensens-inequality/", "Jensen's Inequality"], ["/02-entropy/entropy/properties-of-shannon-entropy/", "Properties of Shannon Entropy"], ["/02-entropy/conditional-entropy/the-chain-rule/", "The Chain Rule"], ["/02-entropy/mutual-information/definition-mutual-information/", "Definition: Mutual Information"], ["/02-entropy/entropy-diagrams/entropy-diagrams-for-two-random-variables/", "Entropy Diagrams for Two Random Variables"], ["/02-entropy/comparing-two-distributions-relative-and-cross-entropy/definition-cross-entropy/", "Definition: Cross Entropy"]]}, {"title": "Introduction to Source Coding", "children": [["/03-source-coding-data-compression/introduction-to-source-coding/", "Introduction to Source Coding"], ["/03-source-coding-data-compression/symbol-codes/definition-prefix-freeness/", "Definition: Prefix-freeness"], ["/03-source-coding-data-compression/codeword-length/theorem-shannons-source-coding-theorem-optimal-codes/", "Theorem: Shannon's Source-Coding Theorem (Optimal Codes)"], ["/03-source-coding-data-compression/source-coding-algorithms/arithmetic-codes/", "Arithmetic Codes"]]}, {"title": "Source Coding using Typical Sets", "children": [["/04-typical-sets-and-encryption/typical-sets/source-coding-using-typical-sets/", "Source Coding using Typical Sets"], ["/04-typical-sets-and-encryption/conditional-mutual-information/entropy-diagrams-for-three-random-variables/", "Entropy Diagrams for Three Random Variables"], ["/04-typical-sets-and-encryption/perfectly-secure-encryption/minimum-key-length-for-perfectly-secure-encryption/", "Minimum Key Length for Perfectly Secure Encryption"]]}, {"title": "Definition: Longer Markov Chains", "children": [["/05-random-processes/markov-chains/definition-longer-markov-chains/", "Definition: Longer Markov Chains"], ["/05-random-processes/stochastic-processes/markov-process-irreducibility-periodicity-convergence/", "Markov Process: Irreducibility, Periodicity, Convergence"], ["/05-random-processes/entropy-rate/aep-for-ergodic-stationary-processes/", "AEP for Ergodic Stationary Processes"], ["/05-random-processes/more-markov-processes/random-walks-on-graphs/", "Random Walks on Graphs"]]}, {"title": "Types of Discrete Channels", "children": [["/06-error-correction-and-zero-error-transmission/noisy-channels/types-of-discrete-channels/", "Types of Discrete Channels"], ["/06-error-correction-and-zero-error-transmission/error-correcting-codes/error-detectioncorrection-and-the-hamming-bound/", "Error Detection/Correction and the Hamming Bound"], ["/06-error-correction-and-zero-error-transmission/linear-error-correcting-codes/minimal-distance-of-linear-codes/", "Minimal Distance of Linear Codes"], ["/06-error-correction-and-zero-error-transmission/zero-error-channel-coding/shannon-capacity-of-a-graph/", "Shannon Capacity of a Graph"], ["/06-error-correction-and-zero-error-transmission/channel-capacity/definition-channel-capacity/", "Definition: Channel Capacity"]]}],
		editLinks: false,
		displayAllHeaders: true
	},
	head: [
		[
			'script',
			{ 
				type: 'text/x-mathjax-config'
			},
			"MathJax.Hub.Config({tex2jax: {inlineMath: [ ['$','$'], ['\(','\)'] ],processEscapes: true}});"
		],
		[ 'script',
			{ src: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-AMS_HTML'}
		]
	]
}