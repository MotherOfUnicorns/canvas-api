(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{115:function(t,e,i){"use strict";i.r(e);var a=i(0),s=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"definition-prefix-freeness"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#definition-prefix-freeness","aria-hidden":"true"}},[t._v("#")]),t._v(" Definition: Prefix-freeness")]),i("p",[t._v("One convenient way to guarantee that a code is unique decodable is to require it to be prefix-free:")]),i("div",{staticClass:"content-box pad-box-mini border border-trbl border-round"},[i("h4",{staticStyle:{color:"#bc0031"}},[i("strong",[t._v("Definition: Prefix-free code")])]),t._v("\nA binary symbol code \\(C : {\\cal X} \\to \\{0,1\\}^*\\) is prefix-free (or: "),i("span",{staticStyle:{color:"#bc0031"}},[i("strong",[t._v("instantaneous")])]),t._v(") if for all \\(x, x' \\in \\cal X\\) with \\(x \\neq x'\\), \\(C(x)\\) is "),i("i",[t._v("not")]),t._v(" a "),i("a",{attrs:{href:"https://en.wikipedia.org/wiki/Substring#Prefix"}},[t._v("prefix")]),t._v(" of \\(C(x')\\).")]),i("p",[t._v("With a prefix-free encoding, the elements \\(x_1, \\ldots, x_m\\) can be uniquely recovered from \\(C(x_1)|\\cdots |C(x_m)\\), simply by reading the encoding from left to right one bit at a time: by prefix-freeness it will remain unambiguous as reading continues when the current word terminates and the next begins. This is a loose argument for the following proposition:")]),i("div",{staticClass:"content-box pad-box-mini border border-trbl border-round"},[i("h4",{staticStyle:{color:"#bc0031"}},[i("strong",[t._v("Proposition")])]),t._v("\nIf a code \\(\\cal C\\) is prefix-free and \\({\\cal C} \\neq {\\bot}\\) then \\(\\cal C\\) is uniquely decodable.")]),i("p",[t._v('The other direction does not hold: uniquely decodable codes need not be prefix-free. A prefix-free code is appealing from an efficiency point of view, as it allows to decode "on the fly". For a general uniquely decodable code one may possibly have to inspect all bits in the entire string before being able to even recover the first word.')]),i("div",{staticClass:"content-box pad-box-mini border border-trbl border-round"},[i("h4",{staticStyle:{color:"#2d3b45"}},[i("strong",[t._v("Example")])]),t._v("\nThe following are all codes for the source \\(P_X\\), with \\({\\cal X} = \\{\\texttt{a},\\texttt{b},\\texttt{c},\\texttt{d}\\}\\):\n"),i("table",{staticStyle:{"border-collapse":"collapse",width:"100%"},attrs:{border:"1"}},[i("tbody",[i("tr",[i("td",{staticStyle:{width:"16.6667%"}},[t._v("\\(x\\)")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("\\(P_X(x)\\)")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("\\(C_1(x)\\)")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("\\(C_2(x)\\)")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("\\(C_3(x)\\)")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("\\(C_4(x)\\)")])]),i("tr",[i("td",{staticStyle:{width:"16.6667%"}},[t._v("\\(\\texttt{a}\\)")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("0.5")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("00")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("0")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("0")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("0")])]),i("tr",[i("td",{staticStyle:{width:"16.6667%"}},[t._v("\\(\\texttt{b}\\)")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("0.25")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("01")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("10")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("010")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("01")])]),i("tr",[i("td",{staticStyle:{width:"16.6667%"}},[t._v("\\(\\texttt{c}\\)")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("0.125")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("10")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("110")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("01")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("011")])]),i("tr",[i("td",{staticStyle:{width:"16.6667%"}},[t._v("\\(\\texttt{d}\\)")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("0.125")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("11")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("111")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("10")]),i("td",{staticStyle:{width:"16.6667%"}},[t._v("111")])])])]),t._v("\nThese codes can be visualised a as binary trees, with marked codewords, as follows:\n"),i("table",{staticStyle:{width:"100%"}},[i("tbody",[i("tr",[i("td",{staticStyle:{width:"25%","text-align":"center"}},[i("img",{attrs:{src:"https://canvas.uva.nl/courses/2205/files/129820/preview?verifier=u0q3wDA9EBKQipPVX2RfCNNAY9uXgtbLBbw9kjbl",alt:"tree for code 1",width:"71",height:"114","data-api-endpoint":"https://canvas.uva.nl/api/v1/courses/2205/files/129820","data-api-returntype":"File"}})]),i("td",{staticStyle:{width:"25%"}},[i("img",{attrs:{src:"https://canvas.uva.nl/courses/2205/files/129819/preview?verifier=hywuHJIM5BhDInZ0ZztlqWVvVKtGFZBENfMa3QMX",alt:"tree for code 2",width:"105",height:"81","data-api-endpoint":"https://canvas.uva.nl/api/v1/courses/2205/files/129819","data-api-returntype":"File"}})]),i("td",{staticStyle:{width:"25%"}},[i("img",{attrs:{src:"https://canvas.uva.nl/courses/2205/files/129818/preview?verifier=7WC9yv0PjxBja7ShtYC9xGxzhKKKOUri6P43j4WJ",alt:"tree for code 3",width:"105",height:"116","data-api-endpoint":"https://canvas.uva.nl/api/v1/courses/2205/files/129818","data-api-returntype":"File"}})]),i("td",{staticStyle:{width:"25%"}},[i("img",{attrs:{src:"https://canvas.uva.nl/courses/2205/files/129817/preview?verifier=KD29Pa5lzef9mbgK6nxm3XPFyeQ1po5DQXZ5vFeP",alt:"tree for code 4",width:"105",height:"132","data-api-endpoint":"https://canvas.uva.nl/api/v1/courses/2205/files/129817","data-api-returntype":"File"}})])]),i("tr",[i("td",{staticStyle:{width:"25%","text-align":"center"}},[t._v("\\(C_1\\)")]),i("td",{staticStyle:{width:"25%","text-align":"center"}},[t._v("\\(C_2\\)")]),i("td",{staticStyle:{width:"25%","text-align":"center"}},[t._v("\\(C_3\\)")]),i("td",{staticStyle:{width:"25%","text-align":"center"}},[t._v("\\(C_4\\)")])])])]),t._v("\nWhich of these codes are uniquely decodable? Which are prefix-free?\n"),i("p",[i("span",{staticClass:"element_toggler",attrs:{role:"button","aria-controls":"group2","aria-label":"Toggler","aria-expanded":"false"}},[i("span",{staticClass:"Button"},[t._v("Show solution")])])]),i("div",{attrs:{id:"group2"}},[i("div",{staticClass:"content-box"},[t._v("\\(C_1\\) and \\(C_2\\) are prefix-free, and therefore also uniquely decodable. \\(C_3\\) is not uniquely decodable, as \\(C_3(ad) = C_3(b)\\). \\(C_4\\) is not prefix-free, but it is uniquely decodable, since it can be decoded from right to left (it is ``"),i("a",{attrs:{href:"https://en.wikipedia.org/wiki/Substring#Suffix"}},[t._v("suffix")]),t._v('-free"). Note that the binary trees for the prefix-free codes \\(C_1, C_2\\) only have codewords at the leaves.')])])])])}],!1,null,null,null);s.options.__file="README.md";e.default=s.exports}}]);